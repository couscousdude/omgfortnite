{"version":3,"sources":["components/FortniteItem.js","FortniteAPIManagement/GetItemShop.js","components/LinearIndeterminate.js","components/Refresh.js","components/FortniteItemArray.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["FortniteItem","props","classes","this","Card","className","root","CardActionArea","onClick","console","log","CardMedia","media","image","itemImage","title","itemName","CardContent","Typography","gutterBottom","variant","component","Grid","container","spacing","item","xs","xl","sm","md","lg","color","itemInfo","style","fontWeight","itemType","toUpperCase","substring","itemRarity","gold","purple","blue","green","gray","itemColorPicker","src","alt","vbucks","itemCost","marginTop","rating","CardActions","React","Component","withStyles","theme","flexGrow","backgroundColor","secondary","height","paddingTop","text","primary","fontSize","config","require","GetItemShop","a","axios","get","api","invoke","headers","Authorization","key","fortniteResponse","data","useStyles","makeStyles","width","position","left","transform","LinearIndeterminate","LinearProgress","margin","marginBottom","Refresh","Button","startIcon","handleRefresh","FortniteItemArray","getFortniteItems","items","setState","state","justify","padding","map","entry","name","rarity","images","featured","background","store","cost","ratings","avgStars","type","titleText","Navbar","AppBar","Toolbar","App","createMuiTheme","ThemeProvider","withTheme","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79925f4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { CardActionArea, CardActions, CardContent, CardMedia, Typography, Card, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.secondary,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '100%', // 16:9,\r\n        marginTop:'30'\r\n    },\r\n    vbucks: {\r\n        height: 25,\r\n    },\r\n    itemName: {\r\n        color: theme.text.primary,\r\n        fontWeight: 'light',\r\n        fontSize: 30\r\n    },\r\n    itemInfo: {\r\n        color: theme.text.secondary,\r\n        fontWeight: 'light',\r\n        fontSize: 20\r\n    },\r\n    gold: {\r\n        color: 'gold'\r\n    },\r\n    purple: {\r\n        color: 'purple'\r\n    },\r\n    blue: {\r\n        color: 'blue'\r\n    },\r\n    green: {\r\n        color: green[500]\r\n    },\r\n    gray: {\r\n        color: 'gray'\r\n    }\r\n});\r\n\r\nclass FortniteItem extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.props = props;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const itemColorPicker = (itemRarity) => {\r\n            switch(itemRarity) {\r\n                case 'legendary':\r\n                    return classes.gold;\r\n                    break;\r\n                case 'epic':\r\n                    return classes.purple;\r\n                    break;\r\n                case 'rare':\r\n                    return classes.blue;\r\n                    break;\r\n                case 'uncommon':\r\n                    return classes.green;\r\n                    break;\r\n                case 'common':\r\n                    return classes.gray;\r\n                    break;\r\n                default:\r\n                    return;                \r\n            };\r\n        }\r\n\r\n        return (\r\n        <Card className={classes.root} >\r\n            <CardActionArea onClick={() => console.log('oof')}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={this.props.itemImage}\r\n                    // image='https://i.dlpng.com/static/png/6877748_preview.png'\r\n                    title={this.props.itemName}\r\n                />\r\n            </CardActionArea>\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.itemName}>\r\n                {this.props.itemName}\r\n                </Typography>\r\n                <div>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} xl={12} sm={12} md={12} lg={12}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.itemInfo} style={{fontWeight: 500}}>\r\n                                {`${this.props.itemType[0].toUpperCase()}${this.props.itemType.substring(1)}`}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} xl={12} sm={12} md={12} lg={12}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={itemColorPicker(this.props.itemRarity)} style={{fontWeight: 500}}>\r\n                                {`${this.props.itemRarity[0].toUpperCase()}${this.props.itemRarity.substring(1)}`}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} xl={1} sm={1} md={1} lg={1}>\r\n                            <img src='https://i.dlpng.com/static/png/6877748_preview.png' alt='vbucks' className={classes.vbucks} />\r\n                        </Grid>\r\n                        <Grid item xs={10} xl={11} sm={11} md={11} lg={11}>\r\n                            <Typography className={classes.itemInfo}>\r\n                                {this.props.itemCost}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} xl={1} sm={1} md={1} lg={1}>\r\n                            <img src='https://i.dlpng.com/static/png/135530_preview.png' alt='ratings' className={classes.vbucks} />\r\n                        </Grid>\r\n                        <Grid item xs={10} xl={11} sm={11} md={11} lg={11}>\r\n                            <Typography className={classes.itemInfo} style={{marginTop: 2}}>\r\n                                {this.props.rating}/5\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n            </CardActions>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FortniteItem);","import axios from 'axios';\r\n// const axios = require('axios');\r\nconst config = require('./config.json');\r\n\r\nexport default async function GetItemShop() {\r\n    try {\r\n        const fortniteResponse = await axios.get(`${config.api.invoke}`, {\r\n            headers: {\r\n                Authorization: config.api.key\r\n            }\r\n        });\r\n\r\n        return fortniteResponse.data\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    transform: 'translate(-50%)',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.secondary,\r\n        margin: theme.spacing(3),\r\n        marginBottom: 0,\r\n    }\r\n}));\r\n\r\nexport default function Refresh(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                className={classes.root}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<RefreshIcon />}\r\n                onClick={props.handleRefresh}\r\n            >\r\n                Refresh\r\n            </Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport FortniteItem from './FortniteItem';\r\nimport GetItemShop from '../FortniteAPIManagement/GetItemShop';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearIndeterminate from './LinearIndeterminate';\r\nimport Refresh from './Refresh';\r\n\r\nexport default class FortniteItemArray extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            items: []\r\n        };\r\n        this.props = props;\r\n    }\r\n\r\n    getFortniteItems = async () => {\r\n        try {\r\n            const items = await GetItemShop();\r\n            this.setState({items: items.data});\r\n        } catch(error) {\r\n            console.log(`An error occurred ${error}`);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFortniteItems();\r\n    }\r\n\r\n    handleRefresh = async () => {\r\n        this.setState({ items: [] });\r\n\r\n        this.getFortniteItems();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <Refresh handleRefresh={this.handleRefresh} />\r\n            <Grid container justify='center' spacing={4} style={{padding: 24}}>\r\n            { this.state.items\r\n                ? (\r\n                this.state.items.map(entry => (\r\n                <>\r\n                    <Grid item xs={12} xl={3} sm={6} lg={4}>\r\n                        <FortniteItem \r\n                        itemName={entry.item.name} \r\n                        itemRarity={entry.item.rarity} \r\n                        itemImage={entry.item.images.featured ? entry.item.images.featured : entry.item.images.background} \r\n                        itemCost={entry.store.cost}\r\n                        rating={entry.item.ratings.avgStars}\r\n                        itemType={entry.item.type}\r\n                        />\r\n                    </Grid>\r\n                    {/* <Grid xs xl={7} /> */}\r\n                </>\r\n                )))\r\n                : (\r\n                <LinearIndeterminate />\r\n                )}\r\n            </Grid>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.secondary\r\n    },\r\n    titleText: {\r\n        flexGrow: 1,\r\n        position: 'absolute',\r\n        left: \"50%\",\r\n        // top: '10%',\r\n        transform: \"translate(-50%)\",\r\n        color: theme.text.primary,\r\n        // fontFamily: 'Burbank Big Condensed'\r\n    }\r\n}));\r\n\r\nexport default function Navbar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar>\r\n                <Typography className={classes.titleText} variant='h4'>\r\n                    FOrtTNite\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport FortniteItemArray from './components/FortniteItemArray';\nimport Navbar from './components/Navbar'\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\n// import { orange, red } from '@material-ui/core/colors'\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.primary\n  }\n})\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  theme = createMuiTheme({\n    primary: '#282c34',\n    secondary: '#363636',\n    text: {\n      primary: '#b5b5b5',\n      secondary: '#999999'\n    }\n  });\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n      <div className={classes.root}>\n      <ThemeProvider theme={this.theme}>\n        <div>\n          <Navbar />\n        </div>\n        <div>\n          <FortniteItemArray />\n        </div>\n      </ThemeProvider>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles, {withTheme: true})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Titillium Web:300,400,700', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}